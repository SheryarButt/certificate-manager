---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: certificates.certs.k8c.io
spec:
  group: certs.k8c.io
  names:
    kind: Certificate
    listKind: CertificateList
    plural: certificates
    singular: certificate
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Certificate is the Schema for the certificates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CertificateSpec defines the desired state of Certificate
            properties:
              dnsName:
                description: DNSName is the DNS name for which the certificate should
                  be issued
                minLength: 1
                type: string
              purgeOnDelete:
                default: false
                description: PurgeOnDelete specifies if the secret should be deleted
                  when the certificate is deleted
                type: boolean
              reloadOnChange:
                default: false
                description: ReloadOnChange specifies if the deployment should be
                  reloaded when the secret changes
                type: boolean
              rotateOnExpiry:
                default: false
                description: RotateOnExpiry specifies if the certificate should be
                  rotated when it expires
                type: boolean
              secretRef:
                description: SecretRef is the reference to the secret where the certificate
                  should be stored
                properties:
                  name:
                    description: Name is the name of the secret
                    minLength: 1
                    type: string
                required:
                - name
                type: object
              validity:
                description: Validity the time until the certificate expires Valid
                  time units are "s", "m", "h", "d" (seconds, minutes, hours, days)
                pattern: ^([0-9]+)(s|m|h|d)$
                type: string
            required:
            - dnsName
            - secretRef
            - validity
            type: object
          status:
            description: CertificateStatus defines the observed state of Certificate
            properties:
              deployedNamespace:
                description: DeployedNamespace is the namespace where the certificate
                  is deployed
                type: string
              expiryDate:
                description: ExpiryDate is the date when the certificate expires
                format: date-time
                type: string
              message:
                description: Message is a human readable message indicating details
                  about the certificate
                type: string
              status:
                description: Status is the current status of the certificate
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
